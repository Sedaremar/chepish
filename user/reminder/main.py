from aiogram import types
import asyncio
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters.state import StatesGroup, State
import random
import sys
sys.path.append(r"E:\bot_sadar")
from starts.helps import States, dp,bot, conn,cur
from user.reminder import kb_reminded as kb
from user.menu.kb_menu import menu_kb
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


async def reminder_handler(message:types.message):
    await message.answer("""–í —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏. –û–Ω –ø—Ä–∏–¥–µ—Ç –≤–∞–º —á–µ—Ä–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ–µ –≤–∞–º–∏ –≤—Ä–µ–º—è.
–ü—Ä–∏–º–µ—Ä: –í—ã–∫–ª—é—á–∏—Ç—å –ø–ª–∏—Ç—É, –ü–æ–∫–æ—Ä–º–∏—Ç—å —Å–æ–±–∞–∫—É, –ü–æ–∑–≤–æ–Ω–∏—Ç—å –¥—Ä—É–≥—É...""",reply_markup=kb.back_kb)
    await States.TEXT_REMINDED.set()

async def text_reminded(message:types.message):
    if message.text == "–î–æ–º–æ–πüè†":
        await message.answer("–í—ã –≤ –º–µ–Ω—é",reply_markup=menu_kb)
        await States.MENU.set()
    else:
        
        cur.execute(f"UPDATE user SET remind = '{message.text}' WHERE id = '{message.from_user.id}'")
        conn.commit()
        await message.answer("–í —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤—å —Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ —Å—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ.",reply_markup=kb.back_kb1)
        await States.TIME_REMINDED.set()

async def time_reminded(message:types.message):
    if message.text == "–î–æ–º–æ–πüè†":
        await message.answer("–í—ã –≤ –º–µ–Ω—é",reply_markup=menu_kb)
        await States.MENU.set()
    elif message.text == "–°–ª—É—á–∞–π–Ω–æ–µ –í—Ä–µ–º—è‚è≥":
        random_time = random.randrange(1,300) 
        await message.answer(f"–¢–∞–π–º–µ—Ä –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ {random_time}–ú–∏–Ω",reply_markup=menu_kb)
        await States.MENU.set()


        for i in cur.execute(f"SELECT remind FROM user WHERE id = '{message.from_user.id}'"):
            text=i[0]
        await asyncio.sleep(random_time*60)

        await message.answer(f"–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞:\n{text}")

        
    else:
        try:
            d=float(message.text)
        except:
            await message.answer("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–±—Ä–∞–Ω–æ –≤—Ä–µ–º—è!")
        else:
            await message.answer(f"–¢–∞–π–º–µ—Ä –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ {message.text}–ú–∏–Ω",reply_markup=menu_kb)
            await States.MENU.set()

            for i in cur.execute(f"SELECT remind FROM user WHERE id = '{message.from_user.id}'"):
                text=i[0]
            await asyncio.sleep(float(message.text)*60)

            await message.answer(f"‚è∞–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞:\n{text}")


def reminder_timer_register(dp: Dispatcher):
    dp.register_message_handler(reminder_handler, content_types="text", text = "–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞‚è≤", state=States.MENU)
    dp.register_message_handler(text_reminded, content_types="text", state=States.TEXT_REMINDED)
    dp.register_message_handler(time_reminded, content_types="text", state=States.TIME_REMINDED)
# 94