from aiogram import types
import asyncio
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters.state import StatesGroup, State
import random
import sys
sys.path.append(r"E:\bot_sadar")
from starts.helps import States, dp,bot, conn,cur
from user.menu.kb_menu import menu_kb
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

back = KeyboardButton("–î–æ–º–æ–πüè†")

back_kb=ReplyKeyboardMarkup(resize_keyboard=True,row_width=1).add(back)



async def back_menu(message:types.message):
    await message.answer("–í—ã –≤ –º–µ–Ω—é",reply_markup=menu_kb)
    await States.MENU.set()

async def free(message:types.message):
    for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
        coin=i[0]
    if coin < 20:
        cur.execute(f"UPDATE user SET coins = coins + 30 WHERE id = '{message.from_user.id}'")
        conn.commit()
        await message.answer("–ú–æ–Ω–µ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã")
    else:
        await message.answer("–¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –º–æ–Ω–µ—Ç—ã, –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∏–∂–µ 20")

async def tap(message:types.message):
    for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
        bal=i[0]
    await message.answer("""
/coin {–°—Ç–∞–≤–∫–∞} - –®–∞–Ω—Å –≤—ã–π–≥—Ä–∞—Ç—å 50/50, –ø—Ä–∏ –ø–æ–±–µ–¥–µ X2.
/slot {—Å—Ç–∞–≤–∫–∞} - –ù–∏–∑–∫–∏–π —à–∞–Ω—Å –≤—ã–π–≥—Ä–∞—Ç—å, –ø—Ä–∏ –ø–æ–±–µ–¥–µ X4
/free - +30 –ú–æ–Ω–µ—Ç –µ—Å–ª–∏ –±–∞–ª–∞–Ω—Å –Ω–∏–∂–µ 20
/bal - –¢–≤–æ–π –±–∞–ª–∞–Ω—Å
""",reply_markup=back_kb)
    await States.GAMES.set()



async def coin_game(message:types.message):
    try:
        rate=int(message.get_args())
    except:
        await message.answer("–ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —á–∏—Å–ª–æ.")
    else:
        for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
            coin=i[0]
        if rate <15:
            await message.answer("–°—Ç–∞–≤–∫–∏ –º–µ–Ω–µ–µ 15 –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—å—Å—è.")
        elif rate > 100:
            await message.answer("–°–∞–≤–∫–∏ –±–æ–ª–µ–µ 100 –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—å—Å—è")
        elif coin < rate:
            await message.answer("–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –Ω–∞ —Ç–∞–∫—É—é —Å—Ç–∞–≤–∫—É")
        else:
            cur.execute(f"UPDATE user SET coins = coins - {rate} WHERE id = '{message.from_user.id}'")
            conn.commit()
            
            d = [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0]
            result = random.choice(d)
            win = rate * 2
            if result == 1:
                cur.execute(f"UPDATE user SET coins = coins + {win} WHERE id = '{message.from_user.id}'")
                conn.commit()
                for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
                    bal=i[0]
                await message.answer(f"–£—Ä–∞! –¢—ã –ø–æ–±–µ–¥–∏–ª. –¢–≤–æ–π –≤—ã–π–≥—Ä—ã—à: {win}.–¢–≤–æ–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {bal}üí∞")
            else:
                for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
                    bal=i[0]
                await message.answer(f"–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª. –¢–≤–æ–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {bal}")



async def slots_game(message:types.message):
    try:
        rate=int(message.get_args())
    except:
        await message.answer("–ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —á–∏—Å–ª–æ.")
    else:
        for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
            bal=i[0]
        if rate < 30:
            await message.answer("–°—Ç–∞–≤–∫–∏ –º–µ–Ω–µ–µ 30 –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—å—Å—è.")
        elif rate > 10000:
            await message.answer("–°–∞–≤–∫–∏ –±–æ–ª–µ–µ 10000 –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—å—Å—è")
        elif bal < rate:
            await message.answer("–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –Ω–∞ —Ç–∞–∫—É—é —Å—Ç–∞–≤–∫—É")
        else:

            cur.execute(f"UPDATE user SET coins = coins - {rate} WHERE id = '{message.from_user.id}'")
            conn.commit()

            mes=await message.answer("""
üçè | üçè | üçè""")

            subject = ["üçè","üçÖ","üçé","ü•í","üå∏","üçí","ü••","üçè","üçÖ","üçé","ü•í","üå∏","üçí","ü••","üçè","üçÖ","üçé","ü•í","üå∏","üçí","ü••","üçè","üçÖ","üçé","ü•í","üå∏","üçí","ü••","üçí","ü••","üçí","ü••"]
            for _ in range(25):
                s1=random.choice(subject)
                s2=random.choice(subject)
                s3=random.choice(subject)
                await mes.edit_text(f"{s1} | {s2} | {s3}")
            s1=random.choice(subject)
            s2=random.choice(subject)
            s3=random.choice(subject)
            await mes.edit_text(f"{s1} | {s2} | {s3}")
            await asyncio.sleep(2)
            if s1 == s2 and s1 == s3:
                win = rate * 4
                cur.execute(f"UPDATE user SET coins = coins + {win} WHERE id = '{message.from_user.id}'")
                conn.commit()
                for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
                    bal=i[0]
                
                await message.answer(f"–£—Ä–∞! –ü–æ–±–µ–¥–∞! –¢–≤–æ–π –≤—ã–π–≥—Ä—ã—à {win}! –¢–≤–æ–π –±–∞–ª–∞–Ω—Å {bal}")
            else:
                for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
                    bal=i[0]
                
                await message.answer(f"–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª. –¢–≤–æ–π –±–∞–ª–∞–Ω—Å {bal}")



async def balance(message:types.message):
    for i in cur.execute(f"SELECT coins FROM user WHERE id = '{message.from_user.id}'"):
        bal=i[0]
    await message.answer(f"–ë–∞–ª–∞–Ω—Å {bal}")

                
            

    

# 49






        





def game_register_handler(dp : Dispatcher):

    dp.register_message_handler(tap, content_types="text", text="–ü–æ–∏–≥—Ä–∞—Ç—åüïπ",state=States.MENU)
    dp.register_message_handler(back_menu, content_types="text", text="–î–æ–º–æ–πüè†",state=States.GAMES)
    dp.register_message_handler(coin_game,commands = 'coin', state=States.GAMES)
    dp.register_message_handler(slots_game,commands = 'slot', state=States.GAMES)
    dp.register_message_handler(balance,commands = 'bal', state=States.GAMES)
    dp.register_message_handler(free,commands = 'free', state=States.GAMES)
    
    